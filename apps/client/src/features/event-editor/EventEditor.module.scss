@use '../../theme/ontimeColours' as *;
@use '../../theme/v2Styles' as *;

.eventEditorContainer {
  border-radius: 8px;
  background-color: $bg-container-l2;
  grid-area: editor;
  color: white;
  overflow-y: scroll;

  .eventEditorLayout {
    display: grid;
    grid-auto-flow: row;
    // flex-direction: column-reverse;
  }

  .header {
    justify-self: flex-end;
    order: -1;
    height: 0px;
  }
}

.eventEditor {
  padding: 1rem 2rem 2rem 2rem;
  gap: max(1rem, 2vh);

  display: grid;
  grid-template-areas: 'time' 'left' 'right';
  grid-template-rows: auto 1fr 1fr;
}

.timeOptions {
  grid-area: time;
  display: flex;
  gap: 1.5rem;

  .timers,
  .timeSettings {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
}

.left,
.right {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.userEditor {
  display: grid;
  // grid-template-columns: auto 1fr;
  grid-auto-flow: column;
  gap: 0.5rem;
}

.nameLabel {
  grid-column: 1;
}

.nameValue {
  grid-column: 2;
}

@mixin input-label() {
  font-size: calc(1rem - 3px);
  color: $label-gray;
}

.countedInput {
  display: flex;
  justify-content: space-between;
  @include input-label;
}

.inputLabel {
  display: block;
  @include input-label;

  &.delayLabel {
    color: $ontime-delay-text;
  }

  &.publicToggle {
    height: 2rem;
    display: flex;
    align-items: center;
    justify-items: center;
    gap: 0.5rem;
  }
}

.eventActions {
  margin-left: auto;
  display: flex;
  gap: 0.5rem;
}

.spacer {
  height: 1.25rem;
}

.inline {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.splitTwo {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1.5rem;
}

.column {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.padTop {
  margin-top: 0.5rem;
}

.fullHeight {
  height: 100%;
}
